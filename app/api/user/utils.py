from marshmallow import Schema, fields
from marshmallow.validate import Length

class AuthAdminSchema(Schema):
    data = fields.String(required=True)
    mode = fields.String(required=True)
    userType = fields.String(required=True)

class AuthVerifyAdminSchema(Schema):
    otpId = fields.String(required=True, validate=[Length(max=24)])
    otpCode = fields.String(required=True, validate=[Length(max=6)])
    userType = fields.String(required=True)

class AdminSchema(Schema):
    imageUrl= fields.String()
    gender= fields.String()
    title= fields.String()
    firstName= fields.String(required=True)
    middleName= fields.String()
    lastName= fields.String(required=True)
    dob= fields.String(required=True)
    phoneNo= fields.String(required=True, validate=[Length(max=64)])
    address= fields.String()
    roleTitle= fields.String(required=True)
    clearanceLevel= fields.String(required=True)
    joinDate= fields.String(required=True)
    clubs= fields.List(fields.String(), required=True)
    isActive= fields.String(default=True)
    notes= fields.String(default="")
    email = fields.Email(required=True, validate=[Length(max=64)])

class ChildSchema(Schema):
    name = fields.String(required=True)
    dob = fields.String(required=True)

class MemberSchema(Schema):
    isActive= fields.Boolean(default=True)
    email = fields.Email(validate=[Length(max=64)])
    imageUrl= fields.String()
    gender= fields.String(required=True)
    title= fields.String(required=True)
    firstName= fields.String(required=True)
    middleName= fields.String()
    lastName= fields.String(required=True)
    dob= fields.String(required=True)
    phoneNo= fields.String(required=True, validate=[Length(max=10)])
    address= fields.String(required=True)
    company= fields.String()
    industry= fields.String()
    jobTitle= fields.String()
    mNo= fields.String(required=True)
    mType= fields.String(required=True)
    startDate= fields.String(required=True)
    endDate= fields.String(required=True)
    acType= fields.String(required=True)
    acFName= fields.String()
    acLName= fields.String()
    acEmail= fields.String()
    acPhoneNo= fields.String()
    msType= fields.String(required=True)
    msFName= fields.String()
    msLName= fields.String()
    msEmail= fields.String()
    msPhoneNo= fields.String()
    msDOB= fields.String()
    msAnniversary = fields.String()
    founderName1 = fields.String()
    founderName2 = fields.String()
    founderNote = fields.String()
    fDrink = fields.String()
    fFilm = fields.String()
    fitnessActivity = fields.String()
    fHerb = fields.String()
    hobby = fields.List(fields.String(), default=[])
    haveChildren =fields.Boolean(required=True)
    totalChildren = fields.Integer(default=0)
    childrens = fields.List(fields.Nested(ChildSchema))

